services:
  kafka:
    image: bitnami/kafka:4.0
    ports:
      - "19092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CLUSTER_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_JMX_PORT=9101
    command: >
      bash -c "
        /opt/bitnami/scripts/kafka/run.sh &
        sleep 10
        if ! kafka-topics.sh --bootstrap-server kafka:9092 --list | grep -q '^streaming$'; then
          kafka-topics.sh --create --topic streaming --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1
        else
          echo 'Topic \"streaming\" already exists.'
        fi
        wait"
    networks:
      - dimfact-network

  kafka-ui:
    image: provectuslabs/kafka-ui
    ports:
      - "8088:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'kafka:9092'
      KAFKA_CLUSTERS_0_ZOOKEEPER: 'zookeeper:2181'
      KAFKA_CLUSTERS_0_METRICS_PORT: 9101
      DYNAMIC_CONFIG_ENABLED: 'true'
    depends_on:
      - kafka
    networks:
      - dimfact-network

volumes:
  kafka_data:
    driver: local

networks:
  dimfact-network:
    external: true